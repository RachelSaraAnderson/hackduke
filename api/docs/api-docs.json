{
  "apiVersion": "0.2",
  "swaggerVersion": "1.1",
  "basePath": "http://0.0.0.0/",
  "resourcePath": "/department",
  "apis": [{
    "path": "/department",
    "description": "Get a list of departments",
    "operations": [{
      "httpMethod": "GET",
      "summary": "Get a list of departments",
      "notes": "",
      "responseClass": "Department",
      "nickname": "getDepartments",
      "parameters": [{
        "allowMultiple": false,
        "dataType": "number",
        "defaultValue": 100,
        "description": "Limit the number of responses",
        "name": "limit",
        "paramType": "query",
        "required": false
      }, {
        "allowMultiple": false,
        "dataType": "number",
        "defaultValue": 0,
        "description": "Offset the number of responses",
        "name": "skip",
        "paramType": "query",
        "required": false
      }],
      "errorResponses": []
    }]
  }, {
    "path": "/department/{departmentId}",
    "description": "Get a department by id",
    "operations": [{
      "httpMethod": "GET",
      "summary": "Get a department by id",
      "notes": "",
      "responseClass": "Department",
      "nickname": "getDepartmentById",
      "parameters": [{
        "name": "departmentId",
        "paramType": "path",
        "description": "Department Id",
        "dataType": "String",
        "required": true,
        "allowMultiple": false
      }, {
        "allowMultiple": false,
        "dataType": "number",
        "defaultValue": 100,
        "description": "Limit the number of responses",
        "name": "limit",
        "paramType": "query",
        "required": false
      }, {
        "allowMultiple": false,
        "dataType": "number",
        "defaultValue": 0,
        "description": "Offset the number of responses",
        "name": "skip",
        "paramType": "query",
        "required": false
      }],
      "errorResponses": [{
        "code": 500,
        "reason": "Invalid ID"
      }]
    }]
  }, {
    "path": "/pet.{format}",
    "description": "Operations about pets",
    "operations": [{
      "httpMethod": "POST",
      "summary": "Add a new pet to the store",
      "responseClass": "void",
      "nickname": "addPet",
      "parameters": [{
        "description": "Pet object that needs to be added to the store",
        "paramType": "query",
        "required": true,
        "allowMultiple": false,
        "dataType": "Pet"
      }],
      "errorResponses": [{
        "code": 405,
        "reason": "Invalid input"
      }]
    }, {
      "httpMethod": "PUT",
      "summary": "Update an existing pet",
      "responseClass": "void",
      "nickname": "updatePet",
      "parameters": [{
        "description": "Pet object that needs to be updated in the store",
        "paramType": "query",
        "required": true,
        "allowMultiple": false,
        "dataType": "Pet"
      }],
      "errorResponses": [{
        "code": 400,
        "reason": "Invalid ID supplied"
      }, {
        "code": 404,
        "reason": "Pet not found"
      }, {
        "code": 405,
        "reason": "Validation exception"
      }]
    }]
  }, {
    "path": "/pet.{format}/findByStatus",
    "description": "Operations about pets",
    "operations": [{
      "httpMethod": "GET",
      "summary": "Finds Pets by status",
      "notes": "Multiple status values can be provided with comma seperated strings",
      "responseClass": "List[Pet]",
      "nickname": "findPetsByStatus",
      "parameters": [{
        "name": "status",
        "description": "Status values that need to be considered for filter",
        "paramType": "query",
        "defaultValue": "available",
        "allowableValues": {
          "valueType": "LIST",
          "values": ["available", "pending", "sold"],
          "valueType": "LIST"
        },
        "required": true,
        "allowMultiple": true,
        "dataType": "string"
      }],
      "errorResponses": [{
        "code": 400,
        "reason": "Invalid status value"
      }]
    }]
  }, {
    "path": "/pet.{format}/findByTags",
    "description": "Operations about pets",
    "operations": [{
      "httpMethod": "GET",
      "summary": "Finds Pets by tags",
      "notes": "Muliple tags can be provided with comma seperated strings. Use tag1, tag2, tag3 for testing.",
      "deprecated": true,
      "responseClass": "List[Pet]",
      "nickname": "findPetsByTags",
      "parameters": [{
        "name": "tags",
        "description": "Tags to filter by",
        "paramType": "query",
        "required": true,
        "allowMultiple": true,
        "dataType": "string"
      }],
      "errorResponses": [{
        "code": 400,
        "reason": "Invalid tag value"
      }]
    }]
  }],
  "models": {
    "Category": {
      "id": "Category",
      "properties": {
        "id": {
          "type": "long"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Department": {
      "id": "Department",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "Pet": {
      "id": "Pet",
      "properties": {
        "tags": {
          "items": {
            "$ref": "Tag"
          },
          "type": "Array"
        },
        "id": {
          "type": "long"
        },
        "category": {
          "type": "Category"
        },
        "status": {
          "allowableValues": {
            "valueType": "LIST",
            "values": ["available", "pending", "sold"],
            "valueType": "LIST"
          },
          "description": "pet status in the store",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "photoUrls": {
          "items": {
            "type": "string"
          },
          "type": "Array"
        }
      }
    },
    "Tag": {
      "id": "Tag",
      "properties": {
        "id": {
          "type": "long"
        },
        "name": {
          "type": "string"
        }
      }
    }
  }
}